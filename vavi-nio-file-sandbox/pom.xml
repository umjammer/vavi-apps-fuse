<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>vavi</groupId>
    <artifactId>vavi-apps-fuse</artifactId>
    <version>0.1.9</version>
  </parent>

  <artifactId>vavi-nio-file-sandbox</artifactId>

  <name>vavi-nio-file-sandbox</name>
  <url>https://github.com/umjammer/vavi-nio-file-sandbox</url>
  <scm>
    <url>https://github.com/umjammer/vavi-nio-file-sandbox</url>
  </scm>
  <issueManagement>
    <url>https://github.com/umjammer/vavi-nio-file-sandbox/issues</url>
  </issueManagement>

  <profiles>
    <profile>
      <id>local (not on jitpack)</id>
      <activation>
        <os>
          <family>mac</family>
          <arch>aarch64</arch>
        </os>
        <property>
          <name>env.JITPACK</name>
          <value>!true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>3.6.0</version>
            <executions>
              <execution>
                <id>ffmpeg</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>copy</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>vavi</groupId>
                      <artifactId>vavi-image-ffmpeg</artifactId>
                      <version>1.0.11</version>
                      <type>dylib</type>
                      <overWrite>false</overWrite>
                      <outputDirectory>${project.build.testOutputDirectory}</outputDirectory>
                      <destFileName>libFfmpegResampleOpWrapper.dylib</destFileName>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <!-- mvn -P MavenRepoCleaner antrun:run -Dinfile='file' -->
      <id>MavenRepoCleaner</id>
      <build>
        <plugins>
          <plugin>
            <!-- GOOD: fork: OK, test jars: OK, user args, default args: OK -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>3.1.0</version>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <java classname="MavenRepoCleaner" fork="true">
                  <classpath>
                    <path refid="maven.compile.classpath"/>
                    <path refid="maven.test.classpath"/>
                  </classpath>
                  <jvmarg value="-Djava.util.logging.config.file=${project.build.testOutputDirectory}/logging.properties"/>
                </java>
              </target>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <!-- mvn -P CloudDriveFilename antrun:run -Dindir='dir' -->
      <id>CloudDriveFilename</id>
      <activation>
        <property>
          <name>dir</name>
          <value/>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>3.1.0</version>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <java classname="CloudDriveFilename" fork="true">
                  <classpath>
                    <path refid="maven.compile.classpath"/>
                    <path refid="maven.test.classpath"/>
                  </classpath>
                  <jvmarg value="-Djava.util.logging.config.file=${project.build.testOutputDirectory}/logging.properties"/>
                  <arg value="${dir}"/>
                </java>
              </target>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <repositories>
    <repository>
      <id>jitpack.io</id>
      <url>https://jitpack.io</url>
    </repository>
    <repository>
      <id>gitlab-maven</id> <!-- for sen -->
      <url>https://gitlab.com/api/v4/projects/18523814/packages/maven</url>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>com.github.umjammer</groupId>
      <artifactId>vavi-commons</artifactId>
      <version>1.1.10</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jdom</groupId>
      <artifactId>jdom2</artifactId>
      <version>2.0.6.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>jaxen</groupId>
      <artifactId>jaxen</artifactId>
      <version>2.0.0</version>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-commons</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.rainerhahnekamp</groupId>
      <artifactId>sneakythrow</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>vavi</groupId>
      <artifactId>vavi-nio-file-onedrive</artifactId>
      <version>0.1.9</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>vavi</groupId>
      <artifactId>vavi-nio-file-onedrive4</artifactId>
      <version>0.1.9</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>vavi</groupId>
      <artifactId>vavi-nio-file-googledrive</artifactId>
      <version>0.1.9</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>vavi</groupId>
      <artifactId>vavi-nio-file-archive</artifactId>
      <version>0.1.9</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.github.umjammer</groupId>
      <artifactId>vavi-image</artifactId>
      <version>1.0.10</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>jakarta.mail</groupId>
      <artifactId>jakarta.mail-api</artifactId>
      <version>2.1.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>sen</groupId>
      <artifactId>sen</artifactId>
      <version>1.2.3</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.github.umjammer</groupId>
      <artifactId>klab-commons-csv</artifactId>
      <version>2.0.3</version>
      <scope>test</scope>
    </dependency>

<!--
    <dependency>
      <groupId>org.cryptomator</groupId>
      <artifactId>fuse-nio-adapter</artifactId>
      <version>1.2.8</version>
      <scope>test</scope>
    </dependency>
-->

    <dependency>
      <groupId>com.github.umjammer</groupId>
      <artifactId>vavi-util-screenscraping</artifactId>
      <version>1.0.13</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>${vavi-nio-file-base.groupId}</groupId>
      <artifactId>vavi-nio-file-base</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jdk14</artifactId>
      <version>1.7.36</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>
